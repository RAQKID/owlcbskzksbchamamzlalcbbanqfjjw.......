'use strict';

var model = require('./model-CO0-4dQR.cjs');

class Bytez {
  constructor(apiKey, dev = false, browser) {
    this.#client = new model.Client(apiKey, dev, browser);
  }
  #client;
  list = {
    /** List your auto-scaling clusters */
    clusters: () => this.#client.request("list/clusters"),
    /** Lists available models, and provides basic information about each one, such as RAM required */
    models: (options) => this.#client.request(
      `list/models${options?.task ? `?task=${options?.task}` : ""}${options?.modelId ? `?modelId=${options?.modelId}` : ""}`
    ),
    /** List available tasks */
    tasks: () => this.#client.request("list/tasks")
  };
  /**
   * Get a model - allows you to run closed and open source models
   * @param modelId The modelId, for example `openai-community/gpt2`
   * @param providerKey Optional: Closed-source model provider's API key (e.g. OpenAI key)
   */
  model = (modelId, providerKey) => new model.Model(modelId, this, this.#client, providerKey);
}

module.exports = Bytez;
